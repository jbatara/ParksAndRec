// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParksAndRecAPI.Models;

namespace ParksAndRecAPI.Migrations
{
    [DbContext(typeof(ParksAndRecDbContext))]
    partial class ParksAndRecDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ParksAndRecAPI.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("DepartmentHead_FirstName")
                        .IsRequired();

                    b.Property<string>("DepartmentHead_LasetName")
                        .IsRequired();

                    b.Property<string>("DepartmentName")
                        .IsRequired();

                    b.Property<string>("State");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ParksAndRecAPI.Models.DepartmentApiKey", b =>
                {
                    b.Property<int>("DepartmentApiKeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("APIKey")
                        .IsRequired();

                    b.Property<int>("DepartmentId");

                    b.HasKey("DepartmentApiKeyId");

                    b.ToTable("DepartmentApiKeys");
                });

            modelBuilder.Entity("ParksAndRecAPI.Models.Park", b =>
                {
                    b.Property<int>("ParkId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Acres");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("State");

                    b.Property<int>("YearFounded");

                    b.Property<int>("ZipCode");

                    b.HasKey("ParkId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("ParksAndRecAPI.Models.Park", b =>
                {
                    b.HasOne("ParksAndRecAPI.Models.Department", "Department")
                        .WithMany("Parks")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
